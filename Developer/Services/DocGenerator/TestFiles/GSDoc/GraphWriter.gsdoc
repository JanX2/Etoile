<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.3//EN" "http://www.gnustep.org/gsdoc-1_0_3.dtd">
<gsdoc base="GraphWriter">
  <head>
    <title>GraphWriter class documentation</title>
    <author name="Generated by qmathe"></author>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the GraphWriter class
      </heading>
      <class name="GraphWriter" super="NSObject">
        <declared>GraphWriter.h</declared>
        <desc>
          <p>
            @group Model and Metamodel
          </p>
          <p>
            Abstract base class used by Model Description core
            classes.
          </p>
          <p>
            Also implements NestedElement and NamedElement
            protocols that exist in FAME/EMOF.
          </p>
          <p>
            @section FAME Teminology Change Summary
          </p>
          <p>
            Those changes were made to further simplify the FAME
            terminology which can get obscure since it
            overlaps with the host language object model,
            prevent any conflict with existing GNUstep/Cocoa
            API and reuse GNUstep/Cocoa naming habits.
          </p>
          <p>
            We list the FAME term first, then its equivalent name in
            EtoileFoundation:
          </p>
          <deflist>
            <term>FM3.Element</term>
            <desc>ETModelElementDescription</desc>
            <term>FM3.Class</term>
            <desc>ETEntityDescription</desc>
            <term>FM3.Property</term>
            <desc>ETPropertyDescription</desc>
            <term>FM3.RuntimeElement</term>
            <desc>ETAdaptiveModelObject</desc>
            <term>attributes (in <strong>Class</strong>)</term>
            <desc>
              propertyDescriptions (in
              ETEntityDescription)
            </desc>
            <term>
              allAttributes (in <strong>Class</strong>)
            </term>
            <desc>
              allPropertyDescriptions (in
              ETEntityDescription)
            </desc>
            <term>superclass (in <strong>Class</strong>)</term>
            <desc>parent (in ETEntityDescription)</desc>
            <term>class (in Property)</term>
            <desc>owner (in ETPropertyDescription)</desc>
          </deflist>
          <p>
            For the last point class vs owner, we can consider they
            have been merged into a single property in
            EtoileFoundation since they were
            redundant.
          </p>
          <p>
            @section Additions to FAME
          </p>
          <p>
            itemIdentifier has been added as a mean to
            get precise control over the UI generation with
            EtoileUI.
          </p>
          <p>
            @section Removals to FAME/EMOF
          </p>
          <p>
            NamedElement and NestedElement protocols don't
            exist explicitly.
          </p>
        </desc>
        <ivariable type="NSMutableArray*" name="mEdges" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="Agraph_t*" name="mGraph" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="GVC_t*" name="mGraphContext" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSMutableDictionary*" name="mNodes" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <method type="void">
          <sel>addEdge:</sel>
          <arg type="NSString*">nodeA</arg>
          <sel>to:</sel>
          <arg type="NSString*">nodeB</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSValue*">
          <sel>addNode:</sel>
          <arg type="NSString*">node</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void">
          <sel>cleanupGraph</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void">
          <sel>generateFile:</sel>
          <arg type="NSString*">path</arg>
          <sel>withFormat:</sel>
          <arg type="NSString*">format</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSString*">
          <sel>generateWithFormat:</sel>
          <arg type="NSString*">format</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void">
          <sel>layout</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void">
          <sel>setAttribute:</sel>
          <arg type="NSString*">attribute</arg>
          <sel>with:</sel>
          <arg type="NSString*">value</arg>
          <sel>on:</sel>
          <arg type="NSString*">node</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void">
          <sel>setGraphAttribute:</sel>
          <arg type="NSString*">attribute</arg>
          <sel>with:</sel>
          <arg type="NSString*">value</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </class>
    </chapter>
  </body>
</gsdoc>
