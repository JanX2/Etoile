<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.3//EN" "http://www.gnustep.org/gsdoc-1_0_3.dtd">
<gsdoc base="ETDocGenerator">
  <head>
    <title>ETDocGenerator documentation</title>
    <author name="Generated by qmathe"></author>
  </head>
  <body>
    <front><contents /></front>
    <chapter id="_main">
      <heading>ETDocGenerator</heading>
      <p>
        Main function.
      </p>
      <p>
        First, checks the passed arguments using
        ETGetOptionsDictionary, then constructs
        the DocPageWeaver object, makes it generate the
        documentation pages and write the returned pages
        as HTML files in the current directory.
      </p>
      <p>
        @param argc numbers of arguments @param argv array of
        char* with the arguments @task Main
      </p>
    </chapter>
    <chapter>
      <heading>ETDocGenerator macros</heading>
      <p></p>
      <macro name="VALID">
        <arg>arg</arg>
        <desc>
          <p>
            Simple macro to check that the argument is different
            from <code>NO</code>.
          </p>
          <p>
            @param <var>arg</var> a NSValue @return
            <code>YES</code> if the argument is different from
            <code>NO</code>
          </p>
        </desc>
      </macro>
    </chapter>
    <chapter>
      <heading>ETDocGenerator functions</heading>
      <p></p>
      <function type="void" name="generateClassMapping">
        <arg type="NSString*">classFile</arg>
        <desc>
          <p>
            A simple utility function to generate a class mapping
            from a list of class names.
          </p>
          <p>
            @param <var>classFile</var> A plist file we can use
            as a base @task Utility
          </p>
        </desc>
      </function>
      <function type="NSString*" name="indexFileInDirectory">
        <arg type="NSString*">aDirectory</arg>
        <desc>
          <p>
            @taskunit Finding Files
          </p>
        </desc>
      </function>
      <function type="NSString*" name="orderedSymbolDeclarationsFileInDirectory">
        <arg type="NSString*">aDirectory</arg>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </function>
      <function type="void" name="printError">
        <desc>
          <p>
            Displays a simple error message.
          </p>
          <p>
            @task Display
          </p>
        </desc>
      </function>
      <function type="void" name="printHelp">
        <desc>
          <p>
            Displays the help
          </p>
          <p>
            @task Display
          </p>
        </desc>
      </function>
      <function type="NSArray*" name="sourceFilesBy">
        <arg type="NSArray*">collection</arg>
        <arg type="NSString*">type</arg>
        <arg type="NSString*">enumerator</arg>
        <desc>
          <p>
            Macro providing a foreach statement on collections,
            with IMP caching.
          </p>
          <p>
            @param <var>collection</var> Can be <code>nil</code>
            , this argument is ignored. @param <var>type</var> An
            element <var>type</var> such as 'NSString *' to
            typecheck the messages sent to the elements in
            the code block. @task Whatever @param
            <var>enumerator</var> A custom <var>enumerator</var>
            object to use to iterate over the
            <var>collection</var>. @return An array of source
            files that can be enumerated easily and eaten.
          </p>
        </desc>
      </function>
      <function type="NSArray*" name="sourceFilesByAddingSupportFilesFromDirectory">
        <arg type="NSArray*">sourceFiles</arg>
        <arg type="NSString*">parserSourceDir</arg>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </function>
    </chapter>
  </body>
</gsdoc>
