This is a GNUstep port of WindowMaker, 
based on Enrico Sersale's work (see below).

It depends on libwraster.

*** WARNING ***
This is an experimental verion.
Please figure out the key combination to quite Xwindow before starting.
Mine is ALT+CTRL+ESC+DELETE (Ubuntu/PowerPC).
Please read BEHAVIOR and TODO below.
*** WARNING ***

It does not share defaults with WindowMaker.
Therefore, you may lose all your setting for WindowMaker.
It should not crash randomly, but it may not work properly.

Yen-Ju

BEHAVIOR:
1. Right-click to show up the WMaker menu.
   Double-click on WMaker icon can bring up WMaker menu most of the time.
2. "Hide Others" will hide all windows except the focused one.
   But sometimes the main menu is the focused one.
   Therefore, all windows are hidden.
   So be sure that the window is correctly focused,
   which might be difficult or impossible in some cases.
3. In Window Inspector, use ENTER key on keyboard for button "Select Window"
   instead of left-click of mouse.
   Otherwise, it will not work properly.
4. Do not press ESC while a dialog is open.
   It may disable all the menu.
5. Most of the user defaults are not fault-proof.
   Typo in user defaults may trigger segment fault.
6. The window inspector will disassociate with target window
   when target window is hide and closed.
   Beware that there may be glitches now.
7. The crashing panel is removed !!
   It will restart xterm so that you can launch any real window manager.

TODO:
1. use _() for localization.
2. fix RESOURCE_PATH in WINGs/GNUmakefile and RGBTXT in wcolorpanel.c
3. fix loading resources in WINGs subproject.
4. while moving menu of WMApplication, it does not follow mouse.
5. beautify all panels in WMDialogController.
6. kwm.m and gnome.m are not compiled. Therefore, they are not tested.
7. cannot update switch menu in real time while it is detached.
8. cannot use popup button in WMaker (probably related to event handling).
9. can use NSPanel, but cannot use NSWindow (weird).
10. no way to find out whether user defaults changed.
11. use the default defauls when user put the invalid defaults.
12. recover these functions in defaults.m.bak
    * switch panel
    * background
    * update preferences in real-time.
13. cannot refresh user defaults while WMaker is running (memory leak).
14. do not save WMaker in the session.
15. while dialog (NSPanel) is open in modal,
    press ESC key will disable menu actions permanently.
16. InitScript and ExitScript is removed.
17. should move CachedPixmap into ApplicationSupport.
18. fix 'initial workspace' in WMWindowInspector.
19: enable XSMP_ENABLED ?
20: when NSAlertPanel is used, it may be not focused (winmenu).
21: Balloon is mostly nonfunctional.
22: Reimplement crashing panel ?
    WindowMaker basically regenerate a new panel independent from WindowMaker
    in order to handle the crash. Do we launch a backup NSApplication
    containing a panel to handle the crash ?

From: Enrico Sersale <enrico@xxx>	Mailed-By: gnu.org
Reply-To: enrico@xxx
To: gnustep-dev@gnu.org
Date: Jan 24, 2006 8:25 AM
Subject: Re: Graceful termination again
On 2006-01-23 12:54:01 +0200 Chris B. Vetter <chris.vetter@xxx> wrote:

> On 1/23/06, Roman Belenov <rbelenov@yandex.ru> wrote:
>> I hacked a bit trying to implement logoff with graceful application
>> termination on GNUstep and got some questions:
> [...]
>
> The way I see it would be sending a
> NSWorkspaceWillPowerOffNotification when "Logout" (or similar) is
> clicked to the Workspace / Desktop / Window Manager.
>
> The Manager would then use -launchedApplications to send each
> application a terminate message.
>
> Problem is that there currently is no 'real' GNUstep-based XY Manager
> that implements the above. This could be "fixed" if (for example)
> GWorkspace could also act as a window manager, to replace the 'need'
> of Window Maker.
> --
> Chris

Having GWorkspace acting also as a window manager would mean too much work :-)
But you are right when you say that a "logout" notification should come from 
the window manager; at http://www.gnustep.it/enrico/wmaker.tar.gz
 there is a hacked WindowMaker that builds as a GNUstep application; 
wmaker.tar.gz contains the "src" directory of WindowMaker 0.92 with a 
GNUmakefile and two added files, WMApp.h and WMApp.m.
In WMApp.m there is the implementation of a very simple class that, 
in -applicationWillFinishLaunching: adds the file descriptor returned 
by XConnectionNumber() to the run loop and, in receivedEvent::::, 
sends the XEvent to the normal WindowMaker function. Nothing else. 
But, being a real application, WMaker.app could send notifications, 
communicate with other apps, etc..
This is only an experiment but, if somebody would be interested in working 
at it, I think that WMaker.app could become the GNUstep window manager. 
This is a project that should not be very difficult to maintain; if, 
for the moment, we want only to send some notifications, the work should 
consist only in writing a better configure script and, when a new WindowMaker 
will be released, updating our sources (that are only a little part of 
all the WindowMaker sources, I want to remember).
