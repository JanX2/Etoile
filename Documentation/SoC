Opal
----

Opal is the CoreGraphics implementation in Étoilé subversion. Potential tasks include:

- Finish the text-related functions in Opal and build a CoreText implementation on top (probably using Pango for most of the layout).  


StepChat
--------

- Add Jingle support to StepChat (using libjingle).

- Add file transfer support to StepChat

- Implement shared shelf using PubSub (includes implementing PubSub - XEP-0060).

- Implement serverless messaging (XEP-0174)

- Tidy up the StepChat UI quirks.


EtoileUI and CoreObject
-----------------------

EtoileUI is a reflective UI framework based on a uniform tree of UI objects, it implements many Étoilé high-level UI features like Pick & Drop, Pluggable Layouts, Composite Document etc.  CoreObject (including EtoileSerialise) is a framework for managing persistence and metadata on documents/objects.  Potential tasks include:

- Add an OpenGL back end to EtoileUI with basic CoreAnimation-like features.

- Add Garnet-style constraint support to EtoileUI.

- Create palettes for EtoileUI, they should be written with EtoileUI and loadable in both running applications and GORM.

- Write a comprehensive set of unit tests for EtoileSerialise and fix any bugs encountered.

- Write an XML back end for EtoileSerialise and integrate this with StepChat's XMPP framework, allowing automatic whiteboarding of CoreObject managed objects.

- Rewrite AddressKit to use the CoreObject adaptative model APIs.

- Build a Magritte-like model description framework to work with CoreObject and EtoileUI


Étoilé Objective-C Runtime
--------------------------

- Update the Io bridge to use the Étoilé runtime directly to implement the object model (no bridging) making Io a first-class development language for Étoilé.

- Finish porting SEE or some other JavaScript runtime to use the Étoilé runtime for the object model.


Miscellaneous 
-------------

Various miscellaneous tasks include:

- Fix missing parts of Camaelon (the Étoilé / GNUstep theme engine).

- Improve MultimediaKit with a proper scene-graph API, wrappers for FFMPEG, and NSView subclasses.

- Finish TermX (add colour support and other missing features)

- Write the missing parts of SystemConfig, test it on more platforms and implement missing components and write a dæmon which coordinates the access to the system, monitors the system and sends distributed notifications.

- Produce an OMeta implementation for Étoilé.

- Finish the compositing manager.
