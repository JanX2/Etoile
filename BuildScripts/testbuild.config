#
# Build profile for build.sh
#

# Build directory where downloaded or checked out code is put and built
export BUILD_DIR=$PWD/build
# Base installation directory where GNUstep should put directories such as System, Local etc.
export PREFIX_DIR=/

# SVN scheme and user name used to check out GNUstep and Etoile: 
# 'svn co http://' or 'svn co svn://' or 'svn co svn+ssh://<username>@"
export SVN_ACCESS="svn co http://"

# Make parallel building option: -j<number> or ''
export J=-j4

#
# Any variables below can be undefined to skip the action it involves (usually 
# building and/or installing some modules).
#
# For example, DEPENDENCY_SCRIPT= and LLVM_VERSION= would prevent the 
# dependencies to be installed and LLVM to be build (and possibly installed 
# based on MAKE_INSTALL value)
#

export LOG_BASE_DIR=$BUILD_DIR/log
export LOG_DIR=$LOG_BASE_DIR/`date | sed -e 's/ /-/g'`
export LOG_RULE_TEMPLATE=' 1> ${LOG_DIR}/$LOG_NAME.log 2> ${LOG_DIR}/$LOG_NAME-error.log'

export CONFIGURE="eval ./configure $LOG_RULE_TEMPLATE"
# Command to invoke GNU make, usually make or gmake.
export MAKE="make"
# Note: gnustep-make doesn't support distclean in a project already cleaned, so 
# rather use clean
export MAKE_CLEAN="eval $MAKE clean 1> /dev/null 2> /dev/null"
# Command invoked to install LLVM, GNUstep and Etoile modules
# To skip the install step, use MAKE_INSTALL=
export MAKE_INSTALL="sudo -E $MAKE install"
#export MAKE_INSTALL="$MAKE install"
# Command invoked to run the Etoile test suites
export MAKE_TEST="$MAKE check"
# Command invoked to build LLVM, GNUstep and Etoile modules
# Can be tweaked to have additional arguments such as messages=yes
# We tell gnustep-make to always pass debug=yes, so optimizations are disabled 
# for GNUstep and Etoile by default... 
# Note: libobjc2 and LanguageKit force their own optimization flags.
export MAKE_BUILD="eval $MAKE ${J} \$MAKE_OPTS $LOG_RULE_TEMPLATE"

# Mail address to report build or test suite failures automatically
export MAIL=

# Script to run to install dependencies required by both GNUstep and Etoile
DEPENDENCY_SCRIPT=ubuntu-dep-install.sh

# Etoile version: 'trunk'
export ETOILE_VERSION=trunk

# LLVM version: a valid version or ''
#export LLVM_VERSION=2.9
# LLVM configure script: llvm-configure-basic.sh or llvm-configure-ubuntu.sh
export LLVM_CONFIGURE=llvm-configure-basic.sh


# GNUstep Runtime (aka libobjc2) version: a valid version, 'trunk' or ''
export RUNTIME_VERSION=1.5
# GNUstep Make version: a valid version, 'trunk' or ''
export MAKE_VERSION=2.6.1
# GNUstep Base version: a valid version, 'trunk' or ''
export BASE_VERSION=1.22.0
# GNUstep Gui version: a valid version, 'trunk' or ''
export GUI_VERSION=0.20.0
# GNUstep Back version: a valid version, 'trunk' or ''
export BACK_VERSION=0.20.1
# Gorm version: a valid version or ''
export GORM_VERSION=1.2.10

# LLVM git mirror
export LLVM_URL_GIT=http://llvm.org/git/llvm.git
# Clang git mirror
export CLANG_URL_GIT=http://llvm.org/git/clang.git
