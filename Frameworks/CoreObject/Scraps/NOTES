Notes
=======

"Scalable XML Collaborative Editing with Undo" - Stéphane Martin, Pascal Urso, and Stéphane Weiss
http://arxiv.org/pdf/1010.3615

A recent paper with an approached to editing structured documents with selective
undo.

Inspiration for COHistoryTrack?
"An Undo Framework for P2P Collaborative Editing"
Stephane Weiss, Pascal Urso and Pascal Molli
http://hal.inria.fr/docs/00/43/23/73/PDF/main.pdf

History navigation
-------------------

Here is a nice paper looking at history navigation in various applications
(windows help, word, netscape, etc)

http://www.comp.lancs.ac.uk/~dixa/papers/histchap97/histchap97.pdf

Undo/Redo
---------

Interesting discussion of undo/redo in Eclipse. 
Looks at different undo contexts (curent text edit view vs workspace)
http://dev.eclipse.org/viewcvs/viewvc.cgi/platform-ui-home/R3_1/undo-redo-proposal/undo-redo%20problem.html?view=co

UI Defaults:
------------
The Undo/Redo/Branch commands should apply to the active document by default.

	Branch Menu
	--------------
 (Default Branch)
    Trying DIfferent Brush    (X = delete)
    New Branch...


Branch Metadata should be mutable.i.e. isOpen controls whether the branch appears on the menus.Design:
The CoreObject store is composed to two halves:
an immutable per-object commit log,
and
a mutable portion which records the current version of each object, defines a 
per-object history track by labeling a tip and current commit.

COCustomTrack
-------------

/** 
 * @group History Navigation
 *
 * A persistent history track to aggregate hand-picked revisions produced by 
 * multiple unrelated objects.
 *
 * Unlike COHistoryTrack, COCustomTrack lets you control which revisions exist 
 * on the track, without worrying the objects that produced these revisions 
 * belong to the track. In other words, the tracked objects are lazily computed 
 * based on the revisions that were added to the track until now.
 *
 * COCustomTrack can be used to implement undo/redo track when the changes are 
 * not limited to a root object or root object collection (e.g. library), but 
 * span many objects edited in unrelated applications or concern actions that 
 * doesn't involve core objects.<br />
 * For example, an Object Manager that supports editing the entire CoreObject 
 * graph isn't interested in all the changes to support undo/redo at the 
 * application level, but only in the changes done in the ObjectManager. In this 
 * case, using COHistoryTrack wouldn't work, because most revisions produced by 
 * editing the objects in other applications have to be filtered out.
 */